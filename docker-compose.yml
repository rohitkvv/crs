# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    container_name: crs-server
    restart: always
    env_file:
      - .env
    ports:
      - 8080:8080
    networks:
      - crs
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mongodb/mongodb-community-server
    container_name: crs-db
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME:${DB_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD:${DB_PASSWORD}
    volumes:
      - ${VOLUME_PATH}:/data/db
    ports:
      - 27017:27017
    networks:
      - crs
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh db:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  crs:
    external: true
